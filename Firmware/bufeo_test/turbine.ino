/*
 * File:   turbine.ino
 * Author: GIBIC UdeA
 *
 * Created on Sept 29, 2021, 13:41 PM
 */

/** ****************************************************************************
 ** ************ INCLUDES ******************************************************
 ** ****************************************************************************/
#include "turbine.h"

/** ****************************************************************************
 ** ************ DEFINES *******************************************************
 ** ****************************************************************************/

/** ****************************************************************************
 ** ************ EXTERN VARIABLES **********************************************
 ** ****************************************************************************/
// **********************************************************
extern byte currentFrecRespiratoria;
extern int currentRelacionIE;

extern volatile uint8_t insideMenuFlag;

// variable para conteo de ciclos
extern uint16_t Period;
extern uint16_t contPeriod;
extern uint16_t activePeriod;
extern volatile uint8_t flagActive;
extern int currentPotencia;

/** ****************************************************************************
 ** ************ VARIABLES *****************************************************
 ** ****************************************************************************/

/** ****************************************************************************
 ** ************ FUNCTIONS *****************************************************
 ** ****************************************************************************/

/****************************************************************************
 ***** Atencion a interrupcion por encoder **********************************
 ****************************************************************************/
void task_Turbine(void *arg)
{

    ledcAttachPin(TURBINE, PWM1_Ch);
    ledcSetup(PWM1_Ch, PWM1_Freq, PWM1_Res);

    while (1)
    {

        if (flagActive)
        {
            digitalWrite(LUMINR, LOW);
            digitalWrite(LUMING, HIGH);

            ledcWrite(PWM1_Ch, 10 * currentPotencia);
        }
        else
        {
            digitalWrite(LUMINR, HIGH);
            digitalWrite(LUMING, LOW);

            ledcWrite(PWM1_Ch, 0);
        }

        vTaskDelay(10);
    }
}

/** ****************************************************************************
 ** ************ END OF THE CODE ***********************************************
 ** ****************************************************************************/
